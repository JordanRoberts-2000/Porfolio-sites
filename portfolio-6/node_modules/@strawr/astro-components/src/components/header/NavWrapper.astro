---
import { cva } from 'class-variance-authority';
import { cn } from '@strawr/utils'
import type { HTMLAttributes } from 'astro/types';
type Props = {
    animationType?: "reveal" | "overlay"
} & HTMLAttributes<'nav'>
const { animationType="overlay", class: className } = Astro.props;
const navVariations = cva(
    // Base styles
    [
        ''
    ], {
    variants: {
        animationType: {
            reveal: [
                "fixed md:static left-0 top-0 h-screen duration-300 px-4 -z-10",
                "md:h-auto md:flex md:z-0"
            ],
            overlay: [
                "fixed top-0 left-0 h-screen duration-300 px-4 -translate-x-[calc(100%+4px)]",
                "group-data-[active]:translate-x-0",
                ""
            ],
        },
    }
})
---
<nav class={cn(navVariations({animationType}), className)}>
    <slot/>
</nav>
{animationType === "reveal" &&
    <script>
        const nav = document.querySelector('nav');
        const pageWrapper = document.querySelector('#pageWrapper');
        if(!pageWrapper) throw Error("reveal animation requires page wrapper component");
        let navParent = nav.parentNode;
        let navPreviousSibling = nav.previousElementSibling;
        let navMoved = false;

        function MoveNav() {
            pageWrapper.appendChild(nav);
            navMoved = true;
        }

        function moveNavigationBack() {
            if(!navPreviousSibling){
                navParent.appendChild(nav);
            }else{
                navParent.insertBefore(nav, navPreviousSibling.nextSibling);
            }
            navMoved = false;
        }

        window.addEventListener('resize', () => {
            if(window.innerWidth < 768 && !navMoved)MoveNav();
            if(window.innerWidth >= 768 && navMoved)moveNavigationBack();
        })

        if (window.innerWidth < 768) {
            MoveNav();
        }
    </script>
}