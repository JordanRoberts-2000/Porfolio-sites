---
import type { HTMLAttributes } from "astro/types";
import { Picture } from "astro:assets";
// dominant color, blurhash?, pulse, spinner?
// fade in animation
// parallax?
// loading lazy until halfway under screen?
// auto gen alt
// sizes: ['100%', ['md', '50%'], ['lg', '33.3%']]?
// find HTMLAttribute<'type here'>
type ImageFormats = 'avif' | 'jpeg' | 'jpg' | 'svg' | 'png' | 'webp'

type Props = {
    src: any,
    alt: string,
    sizes?: string,
    quality?: number,
    formats?: ImageFormats[],
    decoding?: 'async' | 'sync' | 'auto'
    class?: string,
    loading?: 'lazy' | 'eager',
    fetchpriority?: 'low' | 'high' | 'auto',
    important?: true
    width?: number,
    height?: number
    
} & HTMLAttributes<any>
const { src, alt, quality, formats, width, height, class: className, sizes, loading, fetchpriority, decoding, important, ...rest } = Astro.props;
---

<Picture
    loading={important ? 'eager' : loading ?? 'lazy'}
    fetchpriority={important ? 'high' : fetchpriority ?? 'auto'}
    src={src}
    alt={alt}
    decoding={decoding ?? important ? 'sync' : 'async'}
    {...((width || height) ? { width: width, height: height } : { widths: [640, 768, 1024], sizes: sizes ?? `100vw` })}
    quality={quality ?? important ? 90 : 80}
    formats={import.meta.env.DEV ? ['webp'] : ['avif', 'webp']}
    pictureAttributes={{ class: "contents" }}
    class={className}
    {...rest}
/>
