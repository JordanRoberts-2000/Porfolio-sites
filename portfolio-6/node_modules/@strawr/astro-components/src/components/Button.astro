---
import { type HTMLAttributes } from "astro/types";
import { type VariantProps, cva } from "class-variance-authority";
import { cn } from "@strawr/utils";
type Props = HTMLAttributes<"button"> &
  VariantProps<typeof variants> & {
    triggerModal?: string;
    capitalize?: true;
  };
const {
  size,
  variant,
  class: className,
  triggerModal,
  capitalize,
  ...rest
} = Astro.props;
const html = await Astro.slots.render("default");
const parts = html.split(/(<[^>]+>)/g);
const transformedParts = parts.map((part) => {
  if (part.startsWith("<") && part.endsWith(">")) {
    return part; // Return the tag unchanged
  } else {
    return part.toUpperCase();
  }
});
const capitalized = transformedParts.join("");
const variants = cva(
  [
    "rounded-md cursor-pointer inline-flex items-center justify-center",
    "relative transition outline-none focus-visible:scale-[0.95] disabled:cursor-not-allowed",
    "hover:scale-[1.03] active:scale-95 active:duration-75 w-fit h-fit",
  ],
  {
    variants: {
      variant: {
        primary: [
          "bg-black text-white hover:shadow-md",
          "ring-offset-2 ring-indigo-500/70 focus-visible:ring-2 disabled:shadow disabled:opacity-50",
        ],
        secondary: [],
      },
      size: {
        small: ["text-sm py-1 px-3"],
        default: ["py-1 px-6"],
        large: ["text-lg py-2 px-9"],
      },
    },
    defaultVariants: {
      variant: "primary",
      size: "default",
    },
  }
);
---

<button
  {...{ ...(triggerModal && { "data-modalTrigger": triggerModal }) }}
  class={cn(variants({ variant, size, className }))}
  {...rest}
>
  {capitalize ? <Fragment set:html={capitalized} /> : <slot />}
</button>
<script>
  document.querySelectorAll("[data-modalTrigger]").forEach((el) => {
    const modalId = el.getAttribute("data-modalTrigger");
    const modal: HTMLDivElement | null = document.querySelector(
      `#modal-${modalId}`
    );
    if (!modal) throw Error("Modal trigger id could not find matching modalId");
    el.addEventListener("click", () => {
      modal.setAttribute("data-modalActive", "");
    });
  });
</script>
