import type { FontData } from "../types/fontUtils.js"
import { BUILD_FOLDER_NAME } from './constants.js'

async function generateBuildCss(
        fontData: FontData[], 
        cssVariables: {font: string, cssVariable: string}[],
        classNames: {font: string, className: string}[],
    ): Promise<string>{
    const cssFromData = fontData.map(({name, weight, italic}) => {
        return `
            @font-face {
                font-family: ${name.replace(/_/g, " ")};
                font-style: ${italic ? 'italic' : 'normal'};
                font-weight: ${weight};
                font-display: swap;
                src: url("/${BUILD_FOLDER_NAME}/${name}_${weight}_${italic ? 'italic' : 'normal'}.woff2") format("woff2");
            }
        `
    })
    const cssVariableDataArr = cssVariables.map(({font, cssVariable}) => (`
        ${cssVariable}: ${font.replace(/_/g, ' ')};\n
    `))
    const cssVariableData = `
        :root {
            ${cssVariableDataArr.join("")}
        }

    `
    const cssClassNameDataArr = classNames.map(({font, className}) => `
        .${className}{
            font-family: "${font.replace(/_/g, ' ')}";
        }

    `)
    return cssFromData.join('') + cssClassNameDataArr.join("") + cssVariableData
}

export default generateBuildCss